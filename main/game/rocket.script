go.property("speed", 0.02)
local action_id_touch = hash("touch")

local function set_pos(self, action)
	self.pos.x = vmath.lerp(self.speed, self.pos.x, action.x)
	self.pos.y = vmath.lerp(self.speed, self.pos.y, action.y)
	-- implement some smooth movement because lerp effect
	if math.abs(action.x - self.pos.x) < 120 and math.abs(action.y - self.pos.y) < 150 and
	not self.speed_change then
		self.speed = self.speed * 1.7
		self.speed_change = true
	else
		self.speed = self.actual_speed
		self.speed_change = false
	end
	go.set_position(self.pos)
end

local function set_rot(self, action)
	local x = action.x - self.pos.x
	local y = action.y - self.pos.y
	-- atan2 for determine angle betwen 2 vector (x,y) to (n1,n2) on radian
	self.rot.z = math.atan2(y, x)
	go.set_rotation(vmath.quat_rotation_z(self.rot.z))
	--print("in degree",math.deg(self.rot.z))
end

local function rocket_move(self, action_id, action)
	if self.game_start and action_id == action_id_touch then
		set_pos(self, action)
		set_rot(self, action)
		if action.released then
			print "do slide"
		end
	elseif not self.game_start and action_id == action_id_touch and action.pressed then
		self.game_start = true
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
	print "rocket created"
	self.game_start = false
	self.pos = go.get_position()
	self.rot = go.get_rotation()
	self.actual_speed = self.speed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collision_response") then
		if message.group == hash("coin") then
			msg.post(message.other_id, "get_coin")
			--pprint(message)
		end
		if message.group == hash("meteor") and not self.is_destroy then
			print "rocket damaged!"
			self.is_destroy = true
			msg.post(".", "release_input_focus")
			sprite.set_constant("/go_rocket#sprite", "tint", vmath.vector4(1, 1, 1, 0.5))
		end
	end
end

function on_input(self, action_id, action)
	rocket_move(self, action_id, action)
end