local Button = require "main.module.gui_button"

local function create_sprite_button(node, released_animation, callback)
	return Button.create(node, callback, "sprite", hash(released_animation), hash(released_animation.."2"))
end

local function create_scale_button(node, callback)
	return Button.create(node, callback)
end

local function updating_coin(self)
	local node = gui.get_node("coin_text")
	gui.set_text(node, coin_saved)
end

local function menu_state(self)
	if self.curr_menu_state == "goto_choose_rocket" then
		gui.animate(gui.get_node("main_menu"), "position.x", -480, gui.EASING_INBACK, 0.6)
		gui.animate(gui.get_node("rocket_list"), "position.x", -480, gui.EASING_OUTBACK, 0.6, 0.6, function()
			self.btn_click_once = false
		end)
	elseif self.curr_menu_state == "goto_menu_via_choose_rocket" then
		gui.animate(gui.get_node("rocket_list"), "position.x", 0, gui.EASING_INBACK, 0.6)
		gui.animate(gui.get_node("main_menu"), "position.x", 0, gui.EASING_OUTBACK, 0.6, 0.6, function()
			self.btn_click_once = false
		end)
	elseif self.curr_menu_state == "goto_astropedia" then
		gui.animate(gui.get_node("main_menu"), "position.x", 480, gui.EASING_INBACK, 0.6)
		gui.animate(gui.get_node("astronom"), "position.x", 480, gui.EASING_OUTBACK, 0.6, 0.6, function()
			self.btn_click_once = false
		end)
	elseif self.curr_menu_state == "goto_menu_via_astro" then
		gui.animate(gui.get_node("astronom"), "position.x", 0, gui.EASING_INBACK, 0.6)
		gui.animate(gui.get_node("main_menu"), "position.x", 0, gui.EASING_OUTBACK, 0.6, 0.6, function()
			self.btn_click_once = false
		end)
	elseif self.curr_menu_state == "goto_game" then
		self.btn_click_once = false
		msg.post(".", "release_input_focus")
		msg.post("loader:/go_loader#script", self.curr_menu_state)
	else
		print("wrong state input on menu_state()")
	end
end

local function buttons_astropedia(self, action_id, action)
	for key, value in pairs(self.astropedias) do
		if value.unlocked and not value.is_open then
			value.btn.on_input(action_id, action)
		end
	end
end

local function show_astro_panel(self, enable)
	local node = gui.get_node("trivia_panel")
	local pos_y
	local ease
	if enable then
		pos_y = 415
		ease = gui.EASING_OUTBACK
	else
		pos_y = -228
		ease = gui.EASING_INBACK
	end
	gui.animate(node, "position.y", pos_y, ease, 0.6, 0, function()
		self.btn_click_once = false
	end)
	self.panel_open = enable
end

function init(self)
	msg.post(".", "acquire_input_focus")
	updating_coin(self)
	print "from init menu"
	self.curr_menu_state = "goto_menu" -- just init to make back or esc key works
	self.btn_click_once = false -- make sure it clicked once
	self.panel_open = false -- initialization for panel astropedia
	
	self.play_btn = create_sprite_button(gui.get_node("start_btn"), "button_bermain", function()
		self.btn_click_once = true
		self.curr_menu_state = "goto_game"
		menu_state(self)
	end)
	self.choose_rocket_btn = create_sprite_button(gui.get_node("char_btn"), "button_pilihroket", function()
		self.btn_click_once = true
		self.curr_menu_state = "goto_choose_rocket"
		menu_state(self)
	end)
	self.to_menu_btn = create_sprite_button(gui.get_node("to_menu_box"), "button_menuawal", function()
		self.btn_click_once = true
		self.curr_menu_state = "goto_menu_via_choose_rocket"
		menu_state(self)
	end)
	self.astropedia_btn = create_sprite_button(gui.get_node("astroped_btn"), "button_astropedia", function()
		self.btn_click_once = true
		self.curr_menu_state = "goto_astropedia"
		menu_state(self)
	end)
	self.to_menu_btn2 = create_sprite_button(gui.get_node("to_menu_box2"), "button_menuawal", function()
		self.btn_click_once = true
		self.curr_menu_state = "goto_menu_via_astro"
		menu_state(self)
	end)

	self.confirm_btn = create_sprite_button(gui.get_node("confirm_btn"), "button_astropedia", function()
		self.btn_click_once = true
		show_astro_panel(self, false)
	end)

	local temp_callback = (function()
		pprint("hi")
	end)
	self.astropedias = {
		asteroid = {
			btn = create_scale_button(gui.get_node("trivial_1/box"), function()
				--self.astropedias.asteroid.is_open = true
				show_astro_panel(self, true)
				self.btn_click_once = true
			end),
			unlocked = true,
			is_open = false
		},
		rocket = {
			btn = create_scale_button(gui.get_node("trivial_2/box"), temp_callback),
			unlocked = false,
			is_open = false
		},
		moon = {
			btn = create_scale_button(gui.get_node("trivial_3/box"), temp_callback),
			unlocked = false,
			is_open = false
		},
		earth = {
			btn = create_scale_button(gui.get_node("trivial_4/box"), temp_callback),
			unlocked = false,
			is_open = false
		}
	}

end

function on_message(self, message_id, message, sender)
	-- from loader.script
	if message_id == hash("on_enable") then
		self.curr_menu_state = "goto_menu"
		msg.post(".", "acquire_input_focus")
		print("HIGHSCORE:",highscore)
		print("COINS:",coin_saved)
		updating_coin(self)
	end
end

function on_input(self, action_id, action)
	if not self.btn_click_once then
		if (action_id == hash("back") or action_id == hash("esc")) and
		action.pressed and string.sub(self.curr_menu_state, 1, 9) == "goto_menu" then
			-- can quit if only if in goto_menu state
			print "quit game"
			msg.post("@system:", "exit", {code = 0})
		else
			if not self.panel_open then
				self.to_menu_btn2.on_input(action_id, action)
			end
			self.play_btn.on_input(action_id, action)
			self.choose_rocket_btn.on_input(action_id, action)
			self.to_menu_btn.on_input(action_id, action)
			self.astropedia_btn.on_input(action_id, action)
			buttons_astropedia(self, action_id, action)
			self.confirm_btn.on_input(action_id, action)
		end
	end
end
