--GLOBAL VARIABLE
highscore = 0
score = 0
coin_saved = 0
coin_collected = 0
astropedia_data = nil -- for storing data json (decoded)

local PROX = "#proxy_"
-- debug_json
local json_db = sys.load_resource("/main/database/astropedia_db.json")

local function load_menu(self)
	msg.post(PROX.."menu", "load")
end

local function enable_menu(self, enable)
	if enable then
		msg.post(PROX.."menu", "enable")
		msg.post("menu:/go_menu", "on_enable")
	else
		msg.post(PROX.."menu", "disable")
	end
	print("menu is enable?",enable)
end

local function load_game(self)
	msg.post(PROX.."game", "load")
end

local function unload_game(self)
	msg.post(PROX.."game", "unload")
	return true
end

function init(self)
	-- to make sure generate random number
	--math.randomseed(socket.gettime())
	-- debug_json
	astropedia_data = json.decode(json_db)
	for i=1,#astropedia_data do
		pprint(astropedia_data[i].description)
	end

	math.randomseed(os.time())
	msg.post(".", "acquire_input_focus")
	load_menu(self)
end

function on_message(self, message_id, message, sender)
	-- from menu.gui_script
	if message_id == hash("goto_game") then
		enable_menu(self, false)
		load_game(self)
	-- from game.script
	elseif message_id == hash("goto_menu") then
		unload_game(self)
		enable_menu(self, true)
	-- from gameover.gui_script
	elseif message_id == hash("restart_game") then
		self.restart = true
		unload_game(self)
	elseif message_id == hash("proxy_loaded") then
		msg.post(sender, "init")
		msg.post(sender, "enable")
		print(sender, "is activated")
	end
	if message_id == hash("proxy_unloaded") then
		print(sender, "is unloaded")
		-- this unload can be used to restart game
		if sender.fragment == hash("proxy_game") and self.restart then
			print("restart game")
			load_game(self)
			self.restart = false
		end
	end
end
